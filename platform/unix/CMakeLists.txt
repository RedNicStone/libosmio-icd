
get_filename_component(PLATFORM_NAME ${CMAKE_CURRENT_SOURCE_DIR} NAME)

set(LIBOSMIO_ICD_PLATFORM_SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/src)

file(GLOB_RECURSE LIBOSMIO_ICD_PLATFORM_HEADERS ${LIBOSMIO_ICD_PLATFORM_SOURCE}/**.h)
file(GLOB_RECURSE LIBOSMIO_ICD_PLATFORM_SOURCES ${LIBOSMIO_ICD_PLATFORM_SOURCE}/**.cpp)

add_library(osmio-icd-${PLATFORM_NAME}
        SHARED ${LIBOSMIO_ICD_PLATFORM_SOURCES})
add_library(libosmio-icd-${PLATFORM_NAME}
        ALIAS osmio-icd-${PLATFORM_NAME})

target_link_libraries(osmio-icd-${PLATFORM_NAME}
        PUBLIC osmio-headers
        PRIVATE osmio-loader)

set(${PLATFORM_NAME}_ICD_INSTALL_LOCATION
        "$ENV{HOME}/lib" CACHE PATH
        "Where ${PLATFORM_NAME} icd library object is stored")

set(${PLATFORM_NAME}_ICD_CONFIG_LOCATION
        "$ENV{HOME}/.local/share/osmio/icd.d" CACHE FILEPATH
        "Where ${PLATFORM_NAME} icd config file is stored")

set(ICD_INSTALL_LOCATION ${${PLATFORM_NAME}_ICD_INSTALL_LOCATION}/libosmio-icd-${PLATFORM_NAME}.so)
set(ICD_API_VERSION "1.0.0")
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/config.json.in ${CMAKE_CURRENT_BINARY_DIR}/config.json)

install(TARGETS osmio-icd-${PLATFORM_NAME}
        LIBRARY DESTINATION ${${PLATFORM_NAME}_ICD_INSTALL_LOCATION})
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/config.json DESTINATION ${${PLATFORM_NAME}_ICD_CONFIG_LOCATION})
